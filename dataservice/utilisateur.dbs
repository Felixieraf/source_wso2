<data name="utilisateur" serviceNamespace="" serviceGroup="" transports="http https">
  <description />
  <config id="utilisateurDS">
 	 <property name="driverClassName">org.postgresql.Driver</property>
    <property name="url">jdbc:postgresql://localhost:5432/utilisateur</property>
    <property name="username">postgres</property>
    <property name="password">postgres</property>
  </config>
 <!--    <config id="utilisateurDS">
   <property name="driverClassName">org.postgresql.Driver</property>
    <property name="url">jdbc:postgresql://devedbmdb.cq07jvdma2am.af-south-1.rds.amazonaws.com:5432/utilisateur</property>
    <property name="username">devedbmdb</property>
    <property name="password">devedbmdb</property>
  </config> -->
  <resource method="GET" path="agents">
    <description>get agent list</description>
    <call-query href="agents"> 
    	<with-param name="ids" query-param="ids" />
    </call-query>
  </resource>
  <query id="agents" useConfig="utilisateurDS">
    <sql>select entity.id as userid, entity.first_name, entity.last_name, entity.email, entity.username, entity.enabled, entity.email_verified, gp.id, gp.name from public.user_group_membership gpm join public.user_entity entity on entity.id = gpm.user_id join public.keycloak_group gp on gp.id = gpm.group_id where entity.id=ANY(:ids::text[])</sql>
    <param type="IN" name="ids" paramType="ARRAY" sqlType="STRING"/>
    <result outputType="json">{"data": {
		    "agents": [{
	   			"id":$userid,
	   			"firstName":$first_name,
	   			"lastName": "$last_name",
	   			"email": $email,
	   			"username": "$username",
	   			"enabled": "$enabled",
	   			"emailVerified": "$email_verified"
		   	}]
	    }}</result>
  </query>
  <resource method="GET" path="agents/roles/{uid}">
    <description>get agent roles list</description>
    <call-query href="agents_roles"> 
    	<with-param name="uid" query-param="uid" />
    </call-query>
  </resource>
  <query id="agents_roles" useConfig="utilisateurDS">
    <sql>select gp.name from public.user_group_membership gpm join public.user_entity entity on entity.id = gpm.user_id join public.keycloak_group gp on gp.id = gpm.group_id where entity.id= :uid</sql>
    <param type="IN" name="uid" paramType="SCALAR" sqlType="STRING"/>
    <result outputType="json">{"data": {
		    "roles": [{
	   			"libelle_role": "$name"
		   	}]
	    }}</result>
  </query>
  <resource method="GET" path="users">
    <description>get users list</description>
    <call-query href="users"> 
    	<with-param name="ids" query-param="ids" />
    </call-query>
  </resource>
  <query id="users" useConfig="utilisateurDS">
    <sql>select entity.id as userid, entity.first_name, entity.last_name, entity.email, entity.username, entity.enabled, entity.email_verified from public.user_entity entity where entity.id=ANY(:ids::text[])</sql>
    <param type="IN" name="ids" paramType="ARRAY" sqlType="STRING"/>
    <result outputType="json">{"data": {
		    "users": [{
	   			"id":$userid,
	   			"firstName":$first_name,
	   			"lastName": "$last_name",
	   			"email": $email,
	   			"username": "$username",
	   			"enabled": "$enabled",
	   			"emailVerified": "$email_verified"
		   	}]
	    }}</result>
  </query>
</data>
