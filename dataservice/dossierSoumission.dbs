<data transports="http https" serviceGroup="mg.gov.edbm.societe.dossierSoumissionDS" serviceNamespace="" name="dossierSoumission">
  <description />
<!--   <config id="dossierSomissionDS"> -->
<!--     <property name="driverClassName">org.postgresql.Driver</property> -->
<!--     <property name="url">jdbc:postgresql://devedbmdb.cq07jvdma2am.af-south-1.rds.amazonaws.com:5432/dossier_somission</property> -->
<!--     <property name="username">devedbmdb</property> -->
<!--     <property name="password">devedbmdb</property> -->
<!--   </config> -->
  	<config id="dossierSomissionDS">
    	<property name="driverClassName">org.postgresql.Driver</property>
	    <property name="url">jdbc:postgresql://13.246.0.44:5432/dossier_somission</property>
	    <property name="username">devedbmdb</property>
	    <property name="password">devedbmdb</property>
   	</config>
<!--   <config id="dossierSomissionDS"> -->
<!--     <property name="driverClassName">org.postgresql.Driver</property> -->
<!--     <property name="url">jdbc:postgresql://localhost:5432/dossier_somission</property> -->
<!--     <property name="username">postgres</property> -->
<!--     <property name="password">postgres</property> -->
<!--   </config> -->
  <resource method="POST" path="addFolderNumber">
    <description />
    <call-query href="addNumeroDossier">
      <with-param name="numeroDossier" query-param="numeroDossier" />
      <with-param name="idIpAdress" query-param="idIpAdress" />
    </call-query>
  </resource>
  <resource method="PUT" path="updateLienDossier">
    <description />
    <call-query href="updateLienDossier">
      <with-param name="lienDossier" query-param="lienDossier" />
      <with-param name="idDossier" query-param="idDossier" />
    </call-query>
  </resource>
  <resource method="POST" path="addDocument">
    <description />
    <call-query href="addDocument">
      <with-param name="nomDocument" query-param="nomDocument" />
      <with-param name="idDossier" query-param="idDossier" />
      <with-param name="idTypeDocument" query-param="idTypeDocument" />
      <with-param name="path" query-param="path" />
    </call-query>
  </resource>
  <resource method="POST" path="addLinkDocument">
    <description />
    <call-query href="addLinkDocument">
      <with-param name="idDossier" query-param="idDossier" />
      <with-param name="idSociete" query-param="idSociete" />
      <with-param name="lienConsultationFormulaire" query-param="lienConsultationFormulaire" />
      <with-param name="lienEditionFormulaire" query-param="lienEditionFormulaire" />
    </call-query>
  </resource>
  <resource method="GET" path="verifyLink">
    <description />
    <call-query href="verifyLink">
      <with-param name="type" query-param="type" />
      <with-param name="pod" query-param="pod" />
    </call-query>
  </resource>
  <resource method="GET" path="getFolderIdByLink">
    <description />
    <call-query href="getfolderIdByLink">
      <with-param name="type_link" query-param="type_link" />
      <with-param name="pod" query-param="pod" />
    </call-query>
  </resource>
  <resource method="GET" path="getListDocumentById">
    <description />
    <call-query href="getListDocumentById">
      <with-param name="idDossier" query-param="idDossier" />
    </call-query>
  </resource>
  <resource method="GET" path="getInformationDossier">
    <description />
    <call-query href="getInformationDossier">
      <with-param name="idDossier" query-param="idDossier" />
    </call-query>
  </resource>
  <resource method="PUT" path="updateStatutNouveau">
    <description />
    <call-query href="updateStatutNouveau">
      <with-param name="idDossier" query-param="idDossier" />
      <with-param name="value" query-param="value" />
    </call-query>
  </resource>
  <resource method="PUT" path="updateStatutMAJ">
    <description />
    <call-query href="updateStatutMAJ">
      <with-param name="idDossier" query-param="idDossier" />
      <with-param name="value" query-param="value" />
    </call-query>
  </resource>
  <resource method="PUT" path="updateStatutDossier">
    <description />
    <call-query href="updateStatutDossier">
      <with-param name="idStatutDossier" query-param="idStatutDossier" />
      <with-param name="idDossier" query-param="idDossier" />
    </call-query>
  </resource>
  <resource method="GET" path="getstatistiqueTotal">
    <description />
    <call-query href="statistiqueTotal">
      <with-param name="idStatutDossier" query-param="idStatutDossier" />
    </call-query>
  </resource>
  <resource method="GET" path="getListFolderDESC">
    <description>folder's list desc</description>
    <call-query href="listFolderDESC" />
  </resource>
  <resource method="GET" path="getListFolderASC">
    <description>folder's list asc</description>
    <call-query href="listFolderASC" />
  </resource>
  <resource method="POST" path="addComment">
    <description />
    <call-query href="addComment">
      <with-param name="idGroup" query-param="idGroup" />
      <with-param name="commentaire" query-param="commentaire" />
      <with-param name="idDossier" query-param="idDossier" />
      <with-param name="idUtilisateur" query-param="idUtilisateur" />
      <with-param name="idStatutCommentaire" query-param="idStatutCommentaire" />
    </call-query>
  </resource>
  <resource method="GET" path="getCommentList/{idEntite}">
    <description />
    <call-query href="commentListByGroup">
      <with-param name="idDossier" query-param="idDossier" />
      <with-param name="idEntite" query-param="idEntite" />
    </call-query>
  </resource>
  <resource method="GET" path="getCommentListAll">
    <description />
    <call-query href="commentListAll">
      <with-param name="idDossier" query-param="idDossier" />
    </call-query>
  </resource>
  <resource method="POST" path="addRdv">
    <description>ajout rendez-vous</description>
    <call-query href="addRdv">
      <with-param name="idDossier" query-param="idDossier" />
      <with-param name="dateRendezVous" query-param="dateRendezVous" />
      <with-param name="idUtilisateur" query-param="idUtilisateur" />
      <with-param name="heureRdv" query-param="heureRdv" />
    </call-query>
  </resource>
  <resource method="POST" path="addFolderValidationStatus">
    <description>add FolderValidationStatus</description>
    <call-query href="addFolderValidationStatus">
      <with-param name="idDossier" query-param="idDossier" />
      <with-param name="idStatutValidation" query-param="idStatutValidation" />
    </call-query>
  </resource>
  <resource method="DELETE" path="deleteFolderValidationStatus">
    <description>Supprimer un statut validation Dossier</description>
    <call-query href="deleteFolderValidationStatus">
      <with-param name="idDossier" query-param="idDossier" />
      <with-param name="idStatutValidation" query-param="idStatutValidation" />
    </call-query>
  </resource>
  <resource method="GET" path="getlistFolderValidationStatus">
    <description />
    <call-query href="listFolderValidationStatus">
      <with-param name="idDossier" query-param="idDossier" />
    </call-query>
  </resource>
  <resource method="GET" path="getlistAllValidationStatus">
    <description />
    <call-query href="listAllValidationStatus" />
  </resource>
  <resource method="GET" path="getListRdv">
    <description>liste des rendez d'un dossier</description>
    <call-query href="listRdv">
      <with-param name="idDossier" query-param="idDossier" />
    </call-query>
  </resource>
  <resource method="GET" path="listStatutDepot">
    <description />
    <call-query href="listStatutDepot" />
  </resource>
  <resource method="PUT" path="setFolderDepositStatus">
    <description />
    <call-query href="setFolderDepositStatus">
      <with-param name="idStatutDepot" query-param="idStatutDepot" />
      <with-param name="idDossier " query-param="idDossier " />
    </call-query>
  </resource>
  <resource method="POST" path="addIpAdress">
    <description />
    <call-query href="addIpAdress">
      <with-param name="blacklist" query-param="blacklist" />
      <with-param name="ipAdress" query-param="ipAdress" />
    </call-query>
  </resource>
  <resource method="GET" path="checkBlackList">
    <description />
    <call-query href="isBlacklist">
      <with-param name="ipAdress" query-param="ipAdress" />
    </call-query>
  </resource>
  <resource method="GET" path="getStatistiqueOthers/{idStatutDossier}">
    <description>Statistique nouveau,terminer etc..</description>
    <call-query href="statistiqueDossierNouveauTermine">
      <with-param name="idStatutDossier" query-param="idStatutDossier" />
    </call-query>
  </resource>
  <resource method="POST" path="addFolderIdIpAdress">
    <description />
    <call-query href="addFolderIdIpAdress">
      <with-param name="idIpAdress" query-param="idIpAdress" />
    </call-query>
  </resource>
  <resource method="POST" path="insertAnEmptyFolder">
    <description />
    <call-query href="insertAnEmptyFolder">
      <with-param name="idIpAdress" query-param="idIpAdress" />
      <with-param name="step" query-param="step" />
    </call-query>
  </resource>
  <resource method="PUT" path="updateStep">
    <description />
    <call-query href="updateStep">
      <with-param name="step" query-param="step" />
      <with-param name="idDossier" query-param="idDossier" />
    </call-query>
  </resource>
  <resource method="DELETE" path="deleteDocument">
    <description />
    <call-query href="deleteDocument">
      <with-param name="path" query-param="path" />
    </call-query>
  </resource>
  <resource method="PUT" path="setFolderNumber">
    <description />
    <call-query href="setFolderNumber">
      <with-param name="numeroDossier" query-param="numeroDossier" />
      <with-param name="idDossier" query-param="idDossier" />
    </call-query>
  </resource>
  <resource method="PUT" path="setFolderProgress">
    <description />
    <call-query href="setFolderProgress">
      <with-param name="idProgression" query-param="idProgression" />
      <with-param name="idDossier" query-param="idDossier" />
    </call-query>
  </resource>
  <resource method="GET" path="listProgression">
    <description />
    <call-query href="listProgression" />
  </resource>
  <resource method="GET" path="factureDatas">
    <description />
    <call-query href="factureDatas" />
  </resource>
  <resource method="GET" path="factureDataMaxPriority">
    <description />
    <call-query href="factureDataMaxPriority" />
  </resource>
  <resource method="GET" path="companyFacture">
    <description />
    <call-query href="companyFacture">
      <with-param name="idDossier" query-param="idDossier" />
    </call-query>
  </resource>
  <resource method="GET" path="companyCustomFacture">
    <description />
    <call-query href="companyCustomFacture">
      <with-param name="idDossier" query-param="idDossier" />
    </call-query>
  </resource>
  <resource method="POST" path="saveCompanyBill">
    <description />
    <call-query href="saveCompanyBill">
      <with-param name="idFactureData" query-param="idFactureData" />
      <with-param name="idDossier" query-param="idDossier" />
      <with-param name="label" query-param="label" />
      <with-param name="value" query-param="value" />
      <with-param name="idTypeFacture" query-param="idTypeFacture" />
    </call-query>
  </resource>
  <resource method="DELETE" path="removeCompanyBills">
    <description />
    <call-query href="removeCompanyBills">
      <with-param name="ids" query-param="ids" />
    </call-query>
  </resource>
  <resource method="GET" path="printDocuments/{idDossier}">
    <description />
    <call-query href="printDocuments">
      <with-param name="idDossier" query-param="idDossier" />
    </call-query>
  </resource>
  <resource method="GET" path="printDocument/corporate/{corporate}/{idDossier}">
    <description />
    <call-query href="printDocumentCorporate">
      <with-param name="corporate" query-param="corporate" />
      <with-param name="idDossier" query-param="idDossier" />
    </call-query>
  </resource>
  <resource method="POST" path="printDocument">
    <description />
    <call-query href="printDocument">
      <with-param name="idDossier" query-param="idDossier" />
      <with-param name="path" query-param="path" />
      <with-param name="corporate" query-param="corporate" />
    </call-query>
  </resource>
  <resource method="PUT" path="updatePrintDocument">
    <description />
    <call-query href="updatePrintDocument">
      <with-param name="idDossier" query-param="idDossier" />
      <with-param name="corporate" query-param="corporate" />
      <with-param name="path" query-param="path" />
    </call-query>
  </resource>
  <resource method="GET" path="lastCommentByCorporate/{idDossier}">
    <description />
    <call-query href="lastCommentByCorporate">
      <with-param name="idDossier" query-param="idDossier" />
    </call-query>
  </resource>
  <resource method="PUT" path="updateStatusOfLastCommentByCorporates">
    <description />
    <call-query href="updateStatusOfLastCommentByCorporates">
      <with-param name="idDossier" query-param="idDossier" />
    </call-query>
  </resource>
  <resource method="PUT" path="updateSubmitDate">
    <description />
    <call-query href="updateSubmitDate">
      <with-param name="idDossier" query-param="idDossier" />
    </call-query>
  </resource>
  <resource method="POST" path="saveBillStory">
    <description />
    <call-query href="saveBillStory">
      <with-param name="uidUser" query-param="uidUser" />
      <with-param name="idDossier" query-param="idDossier" />
      <with-param name="statutPaiement" query-param="statutPaiement" />
    </call-query>
  </resource>
  <resource method="PUT" path="updateBillStory">
    <description />
    <call-query href="updateBillStory">
      <with-param name="uidUser" query-param="uidUser" />
      <with-param name="idDossier" query-param="idDossier" />
      <with-param name="statutPaiement" query-param="statutPaiement" />
    </call-query>
  </resource>
  <resource method="GET" path="billStory/{idDossier}">
    <description />
    <call-query href="billStory">
      <with-param name="idDossier" query-param="idDossier" />
    </call-query>
  </resource>
  <resource method="GET" path="billStoryById/{id}">
    <description />
    <call-query href="billStoryById">
      <with-param name="id" query-param="id" />
    </call-query>
  </resource>
  <query id="addNumeroDossier" useConfig="dossierSomissionDS">
    <sql>INSERT INTO public.dossier(
	 "numeroDossier","idIpAdress")
	VALUES (:numeroDossier,:idIpAdress) RETURNING "idDossier","numeroDossier"</sql>
    <param type="IN" name="numeroDossier" paramType="SCALAR" sqlType="STRING" />
    <param type="IN" name="idIpAdress" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"idDossiers":{"idDossier":$idDossier,"numeroDossier":"$numeroDossier"}}</result>
  </query>
  <query id="updateLienDossier" useConfig="dossierSomissionDS">
    <sql>UPDATE public.dossier
	SET  "lienDossier"=:lienDossier
	WHERE "idDossier"=:idDossier</sql>
    <param type="IN" name="lienDossier" paramType="SCALAR" sqlType="STRING" />
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
  </query>
  <query id="addDocument" useConfig="dossierSomissionDS">
    <sql>INSERT INTO public.document(
	"nomDocument", "idDossier", "idTypeDocument","path")
	VALUES (:nomDocument, :idDossier, :idTypeDocument,:path);</sql>
    <param type="IN" name="nomDocument" paramType="SCALAR" sqlType="STRING" />
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="idTypeDocument" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="path" paramType="SCALAR" sqlType="STRING" />
  </query>
  <query id="addLinkDocument" useConfig="dossierSomissionDS">
    <sql>INSERT INTO public."lienFormulaire"(
	"idDossier", "idSociete", "lienConsultationFormulaire", "lienEditionFormulaire")
	VALUES (:idDossier, :idSociete, :lienConsultationFormulaire, :lienEditionFormulaire)</sql>
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="idSociete" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="lienEditionFormulaire" paramType="SCALAR" sqlType="STRING" />
    <param type="IN" name="lienConsultationFormulaire" paramType="SCALAR" sqlType="STRING" />
  </query>
  <query id="verifyLink" useConfig="dossierSomissionDS">
    <sql>WITH
    constant_type AS (VALUES (:type)),
    pod AS (VALUES (:pod))

SELECT  CASE WHEN (table constant_type)='read' THEN (SELECT "idDossier" as exitinglink from public."lienFormulaire" where "lienConsultationFormulaire"=(table pod) LIMIT 1 ) 
						ELSE  (SELECT "idDossier" as exitinglink from public."lienFormulaire" where "lienEditionFormulaire"=(table pod) LIMIT 1 ) 
						END
from public."lienFormulaire" LIMIT 1  
</sql>
    <param type="IN" name="type" paramType="SCALAR" sqlType="STRING" />
    <param type="IN" name="pod" paramType="SCALAR" sqlType="STRING" />
    <result outputType="json">{"links":{"link":{"idDossier":$exitinglink }}}</result>
  </query>
  <query id="getfolderIdByLink" useConfig="dossierSomissionDS">
    <sql>WITH
    constant_type AS (VALUES (:type_link)),
    pod AS (VALUES (:pod))

SELECT  CASE WHEN (table constant_type)='read' THEN (SELECT "idDossier" from public."lienFormulaire" where "lienConsultationFormulaire"=(table pod) LIMIT 1 ) 
						ELSE  (SELECT "idDossier"  from public."lienFormulaire" where "lienEditionFormulaire"=(table pod) LIMIT 1 ) 
						END
from public."lienFormulaire" LIMIT 1     
</sql>
    <param type="IN" name="type_link" paramType="SCALAR" sqlType="STRING" />
    <param type="IN" name="pod" paramType="SCALAR" sqlType="STRING" />
    <result outputType="json">{"idDossiers":{"dossier":{"idDossier":$idDossier}}}</result>
  </query>
  <query id="getListDocumentById" useConfig="dossierSomissionDS">
    <sql>SELECT "nomDocument", "idDossier", "nbDeposer", "idTypeDocument", "idDocument", path
	FROM public.document WHERE "idDossier"=:idDossier</sql>
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"documents":{"document":[{"nomDocument":"$nomDocument","idDossier":$idDossier,"nbDeposer":"$nbDeposer", "idTypeDocument":"$idTypeDocument", "idDocument":"$idDocument", path:"$path"}]}}</result>
  </query>
  <query id="getInformationDossier" useConfig="dossierSomissionDS">
    <sql>SELECT public.dossier."idDossier", "lienDossier", "dateSoumission", "idStatutDepot", "idStatutValidation", "rdvDepot", updated_at, "idStatutDossier", "numeroDossier","lienEditionFormulaire",step,"idProgression","dateSoumission", "createdAt"
	FROM public.dossier left JOIN public."lienFormulaire" on public.dossier."idDossier"=public."lienFormulaire"."idDossier" where public.dossier."idDossier"=:idDossier</sql>
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"dossier":{"idDossier":$idDossier,"numeroDossier":"$numeroDossier","lienEditionFormulaire":"$lienEditionFormulaire","idStatutDepot":"$idStatutDepot","idStatutDossier":"$idStatutDossier","step":"$step","dateSoumission":"$dateSoumission","idProgression":"$idProgression", "createdAt":"$createdAt"}}</result>
  </query>
  <query id="updateStatutNouveau" useConfig="dossierSomissionDS">
    <sql>UPDATE public.statut SET nouveau=:value WHERE "idDossier"=:idDossier</sql>
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="value" paramType="SCALAR" sqlType="BOOLEAN" />
  </query>
  <query id="updateStatutMAJ" useConfig="dossierSomissionDS">
    <sql>UPDATE public.statut SET "MAJ"=:value WHERE "idDossier"=:idDossier</sql>
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="value" paramType="SCALAR" sqlType="BOOLEAN" />
  </query>
  <query id="updateStatutDossier" useConfig="dossierSomissionDS">
    <sql>UPDATE public.dossier
	SET "idStatutDossier"=:idStatutDossier
	WHERE "idDossier"=:idDossier</sql>
    <param type="IN" name="idStatutDossier" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
  </query>
  <query id="selectAllFolder" useConfig="dossierSomissionDS">
    <sql>SELECT *
	FROM public.dossier</sql>
    <result />
  </query>
  <query id="statistiqueDossierNouveauTermine" useConfig="dossierSomissionDS">
    <sql>
SELECT COUNT("idDossier") as nombre  FROM public.dossier WHERE "idStatutDossier"=ANY(:idStatutDossier::int[])</sql>
    <param type="IN" name="idStatutDossier" paramType="ARRAY" sqlType="STRING" />
    <result outputType="json">{"statistiques":{"nombre":{"quantite":$nombre}}}</result>
  </query>
  <query id="statistiqueTotal" useConfig="dossierSomissionDS">
    <sql>SELECT COUNT("idDossier") as nombre  FROM public.dossier</sql>
    <param type="IN" name="idStatutDossier" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"statistiquesTotal":{"nombre":{"quantite":$nombre}}}</result>
  </query>
  <query id="listFolderDESC" useConfig="dossierSomissionDS">
    <sql>SELECT "idDossier","dateSoumission", "idStatutDepot", "idStatutValidation", "rdvDepot", "numeroDossier", updated_at, "idStatutDossier", "idProgression", "createdAt"
	FROM public.dossier order by "dateSoumission" desc</sql>
    <result outputType="json">
{"folders":{"folder":[{"idDossier":"$idDossier","dateSoumission":"$dateSoumission", "idStatutDepot":"$idStatutDepot", "idStatutValidation":"$idStatutValidation", "rdvDepot":"$rdvDepot",  "numeroDossier":"$numeroDossier", "updated_at":"$updated_at", "idStatutDossier":"$idStatutDossier", "idProgression":$idProgression, "createdAt":"$createdAt" }]}}</result>
  </query>
  <query id="listFolderASC" useConfig="dossierSomissionDS">
    <sql>SELECT "idDossier","dateSoumission", "idStatutDepot", "idStatutValidation", "rdvDepot", "numeroDossier", updated_at, "idStatutDossier", "idProgression", "createdAt"
	FROM public.dossier order by "dateSoumission" asc</sql>
    <result outputType="json">
{"folders":{"folder":[{"idDossier":"$idDossier","dateSoumission":"$dateSoumission", "idStatutDepot":"$idStatutDepot", "idStatutValidation":"$idStatutValidation", "rdvDepot":"$rdvDepot",  "numeroDossier":"$numeroDossier", "updated_at":"$updated_at", "idStatutDossier":"$idStatutDossier", "idProgression": $idProgression, "createdAt":"$createdAt" }]}}</result>
  </query>
  <query id="addComment" useConfig="dossierSomissionDS">
    <sql>INSERT INTO public.commentaire(
	"idEntite", commentaires, "idDossier", "idUtilisateur", "idStatutCommentaire")
	VALUES (:idGroup, :commentaire, :idDossier, :idUtilisateur, :idStatutCommentaire);</sql>
    <param type="IN" name="idGroup" paramType="SCALAR" sqlType="STRING" />
    <param type="IN" name="commentaire" paramType="SCALAR" sqlType="STRING" />
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="idUtilisateur" paramType="SCALAR" sqlType="STRING" />
    <param type="IN" name="idStatutCommentaire" paramType="SCALAR" sqlType="INTEGER" defaultValue="null" />
  </query>
  <query id="commentListByGroup" useConfig="dossierSomissionDS">
    <sql>SELECT "idEntite", commentaires, "dateCommentaire", "idDossier", "idUtilisateur", "idStatutCommentaire", "idCommentaire"
	FROM public.commentaire WHERE "idEntite"=ANY(:idEntite ::varchar[]) and "idDossier"=:idDossier ORDER BY "dateCommentaire"  DESC</sql>
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="idEntite" paramType="ARRAY" sqlType="STRING" />
    <result outputType="json">{"comments":{"comment":[{"idEntite":"$idEntite", "commentaires":"$commentaires", "dateCommentaire":"$dateCommentaire", "idDossier":"$idDossier", "idUtilisateur":"$idUtilisateur", "idStatutCommentaire":"$idStatutCommentaire", "idCommentaire":"$idCommentaire"
}]}}</result>
  </query>
  <query id="commentListAll" useConfig="dossierSomissionDS">
    <sql>SELECT "idEntite", commentaires, "dateCommentaire", "idDossier", "idUtilisateur", "idStatutCommentaire", "idCommentaire"
	FROM public.commentaire WHERE  "idDossier"=:idDossier ORDER BY "dateCommentaire" DESC</sql>
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"comments":{"comment":[{"idEntite":"$idEntite", "commentaires":"$commentaires", "dateCommentaire":"$dateCommentaire", "idDossier":"$idDossier", "idUtilisateur":"$idUtilisateur", "idStatutCommentaire":"$idStatutCommentaire", "idCommentaire":"$idCommentaire"
}]}}</result>
  </query>
  <query id="addRdv" useConfig="dossierSomissionDS">
    <sql>INSERT INTO public."rendezVous"(
	 "idDossier", "dateRendezVous", "idUtilisateur","heureRdv")
	VALUES (:idDossier, :dateRendezVous::date, :idUtilisateur,:heureRdv::time);</sql>
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="dateRendezVous" paramType="SCALAR" sqlType="STRING" />
    <param type="IN" name="idUtilisateur" paramType="SCALAR" sqlType="STRING" />
    <param type="IN" name="heureRdv" paramType="SCALAR" sqlType="STRING" />
  </query>
  <query id="addFolderValidationStatus" useConfig="dossierSomissionDS">
    <sql>INSERT INTO public."dossierStatutValidation"(
	"idDossier", "idStatutValidation")
	VALUES (:idDossier, :idStatutValidation);</sql>
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="idStatutValidation" paramType="SCALAR" sqlType="INTEGER" />
  </query>
  <query id="deleteFolderValidationStatus" useConfig="dossierSomissionDS">
    <sql>DELETE FROM public."dossierStatutValidation"
	WHERE "idDossier"=:idDossier and "idStatutValidation"=:idStatutValidation</sql>
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="idStatutValidation" paramType="SCALAR" sqlType="INTEGER" />
  </query>
  <query id="listFolderValidationStatus" useConfig="dossierSomissionDS">
    <sql>SELECT "idDossier", "idStatutValidation"
	FROM public."dossierStatutValidation" WHERE "idDossier"=:idDossier</sql>
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"folderValidationStatuses":{"folderValidationStatus":[{"idDossier":"$idDossier","idStatutValidation":"$idStatutValidation"}]}}</result>
  </query>
  <query id="listAllValidationStatus" useConfig="dossierSomissionDS">
    <sql>SELECT "idStatutValidation", "libelleStatutValidation"
	FROM public."statutValidation"</sql>
    <result outputType="json">{"validationStatuses":{"validationStatus":[{"idStatutValidation":"$idStatutValidation","libelleStatutValidation":"$libelleStatutValidation"}]}}</result>
  </query>
  <query id="listRdv" useConfig="dossierSomissionDS">
    <sql>SELECT "idRendezVous", "idDossier", "dateRendezVous", "idUtilisateur", "heureRdv"
	FROM public."rendezVous" WHERE "idDossier"=:idDossier</sql>
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">
{"rdvs":{"rdv":[{"idRendezVous":"$idRendezVous", "idDossier":"$idDossier", "dateRendezVous":"$dateRendezVous", "idUtilisateur":"$idUtilisateur", "heureRdv":"$heureRdv"}]}}</result>
  </query>
  <query id="listStatutDepot" useConfig="dossierSomissionDS">
    <sql>SELECT "idStatutDepot", "nomStatutDepot"
	FROM public."statutDepot";</sql>
    <result outputType="json">{"depositStatuses":{"depositStatuse":[{"idStatutDepot":"$idStatutDepot", "nomStatutDepot":"$nomStatutDepot"
}]}}</result>
  </query>
  <query id="setFolderDepositStatus" useConfig="dossierSomissionDS">
    <sql>UPDATE public.dossier
	SET  "idStatutDepot"=:idStatutDepot
	WHERE "idDossier"=:idDossier ;</sql>
    <param type="IN" name="idStatutDepot" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="idDossier " paramType="SCALAR" sqlType="INTEGER" />
  </query>
  <query id="addIpAdress" useConfig="dossierSomissionDS">
    <sql>INSERT INTO public."adresseIp"(
	"ipAdress", blacklist)
	VALUES ( :ipAdress, :blacklist) RETURNING id;</sql>
    <param type="IN" name="blacklist" paramType="SCALAR" sqlType="BOOLEAN" defaultValue="false" />
    <param type="IN" name="ipAdress" paramType="SCALAR" sqlType="STRING" />
    <result outputType="json">{"idIpAdresses":{"idIpAdress":"$id"}}</result>
  </query>
  <query id="isBlacklist" useConfig="dossierSomissionDS">
    <sql>SELECT "ipAdress", id, blacklist FROM public."adresseIp" WHERE "ipAdress"=:ipAdress</sql>
    <param type="IN" name="ipAdress" paramType="SCALAR" sqlType="STRING" />
    <result outputType="json">{"isBlackLists":{"isBlackList":{"blacklist":$blacklist,"id":"$id"}}}</result>
  </query>
  <query id="addFolderIdIpAdress" useConfig="dossierSomissionDS">
    <sql>INSERT INTO public.dossier(
	 "idIpAdress")
	VALUES (:idIpAdress) RETURNING "idDossier"</sql>
    <param type="IN" name="idIpAdress" paramType="SCALAR" sqlType="STRING" />
  </query>
  <query id="insertAnEmptyFolder" useConfig="dossierSomissionDS">
    <sql>INSERT INTO public.dossier(
	"idIpAdress",step)
	VALUES ( :idIpAdress,:step) RETURNING "idDossier";</sql>
    <param type="IN" name="idIpAdress" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="step" paramType="SCALAR" sqlType="INTEGER" optional="false" />
    <result outputType="json">{"idDossiers":{"idDossier":$idDossier}}</result>
  </query>
  <query id="updateStep" useConfig="dossierSomissionDS">
    <sql>UPDATE public.dossier
	SET  step=:step
	WHERE "idDossier"=:idDossier</sql>
    <param type="IN" name="step" paramType="SCALAR" sqlType="INTEGER" optional="false" />
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" optional="false" />
  </query>
  <query id="deleteDocument" useConfig="dossierSomissionDS">
    <sql>DELETE FROM public.document
	WHERE "path"=:path</sql>
    <param type="IN" name="path" paramType="SCALAR" sqlType="STRING" optional="false" />
  </query>
  <query id="setFolderNumber" useConfig="dossierSomissionDS">
    <sql>UPDATE public.dossier
	SET   "numeroDossier"=:numeroDossier
	WHERE "idDossier"=:idDossier</sql>
    <param type="IN" name="numeroDossier" paramType="SCALAR" sqlType="STRING" optional="false" />
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" optional="false" />
  </query>
  <query id="setFolderProgress" useConfig="dossierSomissionDS">
    <sql>UPDATE public.dossier
	SET   "idProgression"=:idProgression 
	WHERE "idDossier"=:idDossier</sql>
    <param type="IN" name="idProgression" paramType="SCALAR" sqlType="INTEGER" optional="false" />
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" optional="false" />
  </query>
  <query id="listProgression" useConfig="dossierSomissionDS">
    <sql>SELECT "idProgression", libelle
	FROM public.progression;</sql>
    <result outputType="json">{"progressions":{"progression":[{"idProgression":"$idProgression","libelle":"$libelle"}]}}</result>
  </query>
  <query id="factureDatas" useConfig="dossierSomissionDS">
    <sql>SELECT fd.id, fd.label, fd."refValue", fd.priority, tf.label as "typeFacture", tf.id as "idTypeFacture" FROM public."factureData" fd JOIN public."typeFacture" tf ON tf.id = fd."idTypeFacture" ORDER BY tf.id ASC</sql>
    <result outputType="json">{"data":{"factureDatas":[{
    	"id":$id,
    	"label":"$label",
    	"refValue": $refValue,
    	"priority": $priority,
    	"typeFacturation": {
    			"id": $idTypeFacture,
    			"label": "$typeFacture"
    		}
    	}]
    }}</result>
  </query>
  <query id="factureDataMaxPriority" useConfig="dossierSomissionDS">
    <sql>SELECT MAX(priority) as max FROM public."factureData"</sql>
    <result outputType="json">{"factureData":{
    		"max":$max
    	}}    	
    </result>
  </query>
  <query id="companyFacture" useConfig="dossierSomissionDS">
    <sql>SELECT fdd.id, fdd.value, fd.id as "idFactureData", fdd.label, fd."refValue", tf.label as "typeFacture", tf.id as "idTypeFacture", fdd."idFactureData" FROM public."factureDataDossier" fdd JOIN public."factureData" fd ON fd.id = fdd."idFactureData" JOIN public."typeFacture" tf ON tf.id = fd."idTypeFacture" WHERE "idDossier" = :idDossier</sql>
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" optional="false" />
    <result outputType="json">{"data":{"factureDatas":[{
    	"id":$id,
    	"value": $value,
    	"factureData": {
    		"id": $idFactureData,
    		"label":"$label",
    		"refValue": $refValue,
    	},
    	"typeFacturation": {
    			"id": $idTypeFacture,
    			"label": "$typeFacture"
    		}
    	}]
    }}</result>
  </query>
  <query id="companyCustomFacture" useConfig="dossierSomissionDS">
    <sql>SELECT fdd.id, fdd.label, fdd.value, fdd."idFactureData", tf.label as "typeFacture", tf.id as "idTypeFacture" FROM public."factureDataDossier" fdd JOIN public."typeFacture" tf ON tf.id = fdd."idTypeFacture" WHERE fdd."idDossier" = :idDossier AND fdd."idFactureData" IS NULL</sql>
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" optional="false" />
    <result outputType="json">{"data":{"factureDataDossier":[{
    	"id":$id,
    	"label":"$label",
    	"value": $value,
    	"idFactureData": $idFactureData,
    	"typeFacturation": {
    			"id": $idTypeFacture,
    			"label": "$typeFacture"
    		}
    	}]
    }}</result>
  </query>
  <query id="saveCompanyBill" useConfig="dossierSomissionDS">
    <sql>INSERT INTO public."factureDataDossier"("idFactureData", "idDossier", "label", "value", "idTypeFacture") VALUES (:idFactureData, :idDossier, :label, :value, :idTypeFacture) RETURNING id</sql>
    <param type="IN" name="idFactureData" paramType="SCALAR" sqlType="INTEGER" optional="true" />
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" optional="false" />
    <param type="IN" name="label" paramType="SCALAR" sqlType="STRING" optional="true" />
    <param type="IN" name="value" paramType="SCALAR" sqlType="DOUBLE" optional="false" />
    <param type="IN" name="idTypeFacture" paramType="SCALAR" sqlType="INTEGER" optional="false" />
    <result outputType="json">{"factureDataDossier":{"id": $id}}</result>
  </query>
  <query id="removeCompanyBills" useConfig="dossierSomissionDS">
    <sql>DELETE FROM public."factureDataDossier" WHERE id=ANY(:ids::int[])</sql>
    <param type="IN" name="ids" paramType="ARRAY" sqlType="STRING" />
  </query>
  <query id="printDocuments" useConfig="dossierSomissionDS">
    <sql>SELECT * FROM public."impressionDocument" WHERE "idDossier"=:idDossier</sql>
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"data":{
    		"printDoc": [{"id": $id, "path": "$path", "idDossier": $idDossier, "corporate": "$corporate"}]
    	}}
    </result>
  </query>
  <query id="printDocumentCorporate" useConfig="dossierSomissionDS">
    <sql>SELECT * FROM public."impressionDocument" WHERE "idDossier"=:idDossier AND corporate = :corporate</sql>
    <param type="IN" name="corporate" paramType="SCALAR" sqlType="STRING" />
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"data":{
    		"printDoc": [{"id": $id, "path": "$path", "idDossier": $idDossier, "corporate": "$corporate", "createdAt": $createdAt}]
    	}}
    </result>
  </query>
  <query id="printDocument" useConfig="dossierSomissionDS">
    <sql>INSERT INTO public."impressionDocument" (path, "idDossier", corporate) VALUES (:path, :idDossier, :corporate) RETURNING id</sql>
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="path" paramType="SCALAR" sqlType="STRING" />
    <param type="IN" name="corporate" paramType="SCALAR" sqlType="STRING" />
    <result outputType="json">{"printDoc":{"id": $id}}</result>
  </query>
  <query id="updatePrintDocument" useConfig="dossierSomissionDS">
    <sql>UPDATE public."impressionDocument" SET path = :path WHERE "idDossier" = :idDossier AND corporate = :corporate RETURNING id</sql>
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="corporate" paramType="SCALAR" sqlType="STRING" />
    <param type="IN" name="path" paramType="SCALAR" sqlType="STRING" />
    <result outputType="json">{"printDoc":{"id": $id}}</result>
  </query>
  <query id="lastCommentByCorporate" useConfig="dossierSomissionDS">
    <sql>SELECT com."idEntite", com."dateCommentaire", com."idStatutCommentaire", com."updatedAtStatutCommentaire" FROM (SELECT "idEntite", MAX("dateCommentaire") as "dateCommentaire" FROM public.commentaire WHERE "idDossier" = :idDossier GROUP BY "idEntite") tcom INNER JOIN public.commentaire com ON com."dateCommentaire" = tcom."dateCommentaire" AND com."idEntite" = tcom."idEntite"</sql>
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"data":{"comments": [{"idEntite":"$idEntite", "dateCommentaire":"$dateCommentaire", "idStatutCommentaire":"$idStatutCommentaire", "updatedAtStatutCommentaire": "$updatedAtStatutCommentaire"}]}}</result>
  </query>
  <query id="updateStatusOfLastCommentByCorporates" useConfig="dossierSomissionDS">
    <sql>UPDATE public.commentaire SET "updatedAtStatutCommentaire" = CURRENT_TIMESTAMP WHERE "idCommentaire" IN (SELECT com."idCommentaire" FROM (SELECT "idEntite", MAX("dateCommentaire") as "dateCommentaire" FROM public.commentaire WHERE "idDossier" = :idDossier GROUP BY "idEntite") tcom INNER JOIN public.commentaire com ON com."dateCommentaire" = tcom."dateCommentaire" AND com."idEntite" = tcom."idEntite")</sql>
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
  </query>
  <query id="updateSubmitDate" useConfig="dossierSomissionDS">
    <sql>UPDATE public.dossier SET "dateSoumission" = CURRENT_TIMESTAMP WHERE "idDossier" = :idDossier</sql>
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
  </query>
  <query id="saveBillStory" useConfig="dossierSomissionDS">
    <sql>INSERT INTO public."historiquePaiement" ("uidUser", "idDossier", "statutPaiement") VALUES (:uidUser, :idDossier, :statutPaiement) RETURNING "id","statutPaiement"</sql>
    <param type="IN" name="uidUser" paramType="SCALAR" sqlType="STRING" />
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="statutPaiement" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"historique": {
    	"id":$id,
    	"statutPaiement":$statutPaiement,
    }}
    </result>
  </query>
  <query id="updateBillStory" useConfig="dossierSomissionDS">
    <sql>UPDATE public."historiquePaiement" SET "uidUser"= :uidUser, "statutPaiement"= :statutPaiement, "updatedAt" = CURRENT_TIMESTAMP WHERE "idDossier"= :idDossier RETURNING "id","statutPaiement"</sql>
    <param type="IN" name="uidUser" paramType="SCALAR" sqlType="STRING" />
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <param type="IN" name="statutPaiement" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"historique": {
    	"id":$id,
    	"statutPaiement":$statutPaiement,
    }}
    </result>
  </query>
  <query id="billStory" useConfig="dossierSomissionDS">
    <sql>SELECT * FROM public."historiquePaiement" WHERE "idDossier"= :idDossier</sql>
    <param type="IN" name="idDossier" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"historique": {
    	"id":$id,
    	"uidUser":$uidUser,
    	"idDossier": $idDossier,
    	"statutPaiement":$statutPaiement,
    	"createdAt": "$createdAt",
    	"updatedAt": "$updatedAt"
    }}
    </result>
  </query>
  <query id="billStoryById" useConfig="dossierSomissionDS">
    <sql>SELECT * FROM public."historiquePaiement" WHERE "id"= :id</sql>
    <param type="IN" name="id" paramType="SCALAR" sqlType="INTEGER" />
    <result outputType="json">{"historique": {
    	"id":$id,
    	"uidUser":$uidUser,
    	"idDossier": $idDossier,
    	"statutPaiement":$statutPaiement,
    	"createdAt": "$createdAt",
    	"updatedAt": "$updatedAt"
    }}
    </result>
  </query>
  <query id="minValidation" useConfig="dossierSomissionDS">
    <sql>WITH T AS
(
SELECT "idDossier","idStatut", 
       LAG("dateModification") OVER(PARTITION BY "idDossier" 
	                         ORDER BY "dateModification") AS précédent ,
	   "dateModification" AS actuel
FROM   public."historiqueStatutDossier"
)
SELECT  
      /* age( actuel, précédent)*/
	  min( EXTRACT(EPOCH FROM (actuel - précédent))) AS duree
FROM   T where "idStatut"=4 or "idStatut"=3 ;
	</sql>
    <result outputType="json">{"data":{"duree":"$duree"}}</result>
  </query>
  <query id="maxValidation" useConfig="dossierSomissionDS">
    <sql>WITH T AS
(
SELECT "idDossier","idStatut", 
       LAG("dateModification") OVER(PARTITION BY "idDossier" 
	                         ORDER BY "dateModification") AS précédent ,
	   "dateModification" AS actuel
FROM   public."historiqueStatutDossier"
)
SELECT  
      /* age( actuel, précédent)*/
	  max( EXTRACT(EPOCH FROM (actuel - précédent))) AS duree
FROM   T where "idStatut"=4 or "idStatut"=3 ;
	</sql>
    <result outputType="json">{"data":{"duree":"$duree"}}</result>
  </query>
  <query id="moyenneValidation" useConfig="dossierSomissionDS">
    <sql>WITH T AS
(
SELECT "idDossier","idStatut", 
       LAG("dateModification") OVER(PARTITION BY "idDossier" 
	                         ORDER BY "dateModification") AS précédent ,
	   "dateModification" AS actuel
FROM   public."historiqueStatutDossier"
)
SELECT  
      /* age( actuel, précédent)*/
	  avg( EXTRACT(EPOCH FROM (actuel - précédent))) AS duree
FROM   T where "idStatut"=4 or "idStatut"=3 ;
	</sql>
    <result outputType="json">{"data":{"duree":"$duree"}}</result>
  </query>
  <resource method="GET" path="minValidation">
    <description>durée minimum de validation</description>
    <call-query href="minValidation" />
  </resource>
  <resource method="GET" path="maxValidation">
    <description>maximum de validation</description>
    <call-query href="maxValidation" />
  </resource>
  <resource method="GET" path="moyenneValidation">
    <description>durée moyenne de validation</description>
    <call-query href="moyenneValidation" />
  </resource>
</data>
